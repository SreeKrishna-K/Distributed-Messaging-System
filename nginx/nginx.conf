user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    # Variable to hold user ID from various sources
    map $args $user_id_from_query {
        default "";
        "~*X-Auth-User-Id=([^&]+)" $1;
    }

    # Use the user ID from header or query param for sticky sessions
    map $http_x_auth_user_id $sticky_user_id {
        default $user_id_from_query;
        "~.+" $http_x_auth_user_id; # Use header if present
    }
    
    # Enable sticky sessions using user ID
    upstream websocket_servers {
        # hash directive uses the value of the specified variable as a hashing key
        # hash $sticky_user_id consistent;
        hash $http_x_auth_user_id consistent;
        server spring-ws-server1:8081;
        server spring-ws-server2:8082;
    }

    server {
        listen 80;
        server_name localhost;

        location / {
            proxy_pass http://websocket_servers;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Auth-User-Id $http_x_auth_user_id;
            proxy_read_timeout 86400; # keep WebSocket connections open
        }

        location /ws {
            # Extract X-Auth-User-Id from query parameters if present
            if ($args ~* X-Auth-User-Id=([^&]+)) {
                set $user_id $1;
            }
            
            # Log for debugging
            access_log /var/log/nginx/websocket.log main;
            
            proxy_pass http://websocket_servers;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Auth-User-Id $user_id;
            proxy_read_timeout 86400;  # keep WebSocket connections open
            
            # Don't buffer WebSocket connections
            proxy_buffering off;
        }

        # Health check endpoint
        location /health {
            proxy_pass http://websocket_servers/health;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Handle server errors
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
}
